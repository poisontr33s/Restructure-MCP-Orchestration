# Development Override for MCP v2 Infrastructure
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

services:
  # === Development Overrides ===
  
  redis:
    image: redis:latest
    environment:
      - REDIS_SAVE=""  # Disable persistence in dev
    volumes:
      - ./dev/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf --loglevel verbose
    
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=0
    volumes:
      - ./dev/postgres-dev.conf:/etc/postgresql/postgresql.conf
      - ./dev/init-dev.sql:/docker-entrypoint-initdb.d/init-dev.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_LOG_LEVEL=debug
    volumes:
      - ./dev/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      
  nginx:
    image: nginx:alpine
    volumes:
      - ./dev/nginx-dev.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NGINX_DEBUG=1
      
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./dev/prometheus-dev.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
      - '--log.level=debug'
      
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_LOG_LEVEL=debug
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=true
    volumes:
      - ./dev/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./dev/grafana/datasources:/etc/grafana/provisioning/datasources
      
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - LOG_LEVEL=debug
      
  # === Development Tools ===
  
  redis-commander:
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mcp-v2-network
      
  pgadmin:
    image: dpage/pgadmin4:latest
    hostname: pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mcp.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - mcp-v2-network
      
  mailhog:
    image: mailhog/mailhog:latest
    hostname: mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - mcp-v2-network

networks:
  mcp-v2-network:
    driver: bridge

volumes:
  pgadmin_data:
    driver: local

# === Development Resource Limits (Relaxed) ===
x-dev-resources: &dev-resources
  deploy:
    resources:
      limits:
        memory: 512M
      reservations:
        memory: 128M
