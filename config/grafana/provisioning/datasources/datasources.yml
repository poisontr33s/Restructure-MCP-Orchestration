# Grafana Data Sources Configuration for MCP Java Orchestration System

apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: 2.40.0
      cacheLevel: 'High'
      disableMetricsLookup: false
      incrementalQuerying: false
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: zipkin
    secureJsonData: {}

  - name: Zipkin
    type: zipkin
    access: proxy
    url: http://zipkin:9411
    uid: zipkin
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: 'loki'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: 'prometheus'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[5m]))'
      serviceMap:
        datasourceUid: 'prometheus'
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: 'loki'

  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: mcp_orchestration
    user: mcp_dev
    editable: true
    jsonData:
      database: mcp_orchestration
      maxOpenConns: 100
      maxIdleConns: 100
      maxIdleConnsAuto: true
      connMaxLifetime: 14400
      postgresVersion: 1600
      timescaledb: false
      sslmode: disable
    secureJsonData:
      password: java_dev_2025

  - name: Testdata
    type: testdata
    uid: testdata
    editable: true
    jsonData: {}
    secureJsonData: {}
