name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays

env:
  NODE_VERSION: '18'

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan (${{ matrix.package }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        package: [root, core, cli, monitor, shared, servers/base, servers/duckduckgo, servers/sequential-thinking]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run pnpm audit
        run: |
          if [ "${{ matrix.package }}" = "root" ]; then
            pnpm audit --audit-level=moderate --json > audit-results.json || true
          else
            cd packages/${{ matrix.package }}
            pnpm audit --audit-level=moderate --json > ../../audit-results-${{ matrix.package }}.json || true
          fi
          
      - name: Run dependency check
        run: |
          # Generate dependency tree and vulnerability report
          if [ "${{ matrix.package }}" = "root" ]; then
            pnpm list --json > dependency-tree.json || true
          else
            cd packages/${{ matrix.package }}
            pnpm list --json > ../../dependency-tree-${{ matrix.package }}.json || true
          fi
          
      # ARTIFACT V4 COMPATIBILITY NOTE:
      # Each package scan gets unique artifact name to prevent conflicts
      # v4 does not allow overwriting artifacts - each matrix job needs distinct names
      - name: Upload vulnerability scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-scan-${{ matrix.package }}-${{ github.sha }}
          path: |
            audit-results*.json
            dependency-tree*.json
          retention-days: 30
          if-no-files-found: warn

  license-scan:
    name: License Compliance Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install license checker
        run: pnpm add -g license-checker
        
      - name: Generate license report
        run: |
          license-checker --json --out license-report.json || true
          license-checker --csv --out license-report.csv || true
          
      # ARTIFACT V4 COMPATIBILITY NOTE:
      # License scan results with unique name including commit SHA
      # v4 artifacts are immutable - cannot be modified once uploaded
      - name: Upload license scan results
        uses: actions/upload-artifact@v4
        with:
          name: license-scan-results-${{ github.sha }}
          path: |
            license-report.json
            license-report.csv
          retention-days: 90
          if-no-files-found: warn

  security-analysis:
    name: Security Analysis Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, license-scan]
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # ARTIFACT V4 COMPATIBILITY NOTE:
      # Must download each vulnerability scan artifact separately by exact name
      # v4 removed pattern-based artifact downloads
      - name: Download root vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-root-${{ github.sha }}
          path: scans/root/
        continue-on-error: true
        
      - name: Download core vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-core-${{ github.sha }}
          path: scans/core/
        continue-on-error: true
        
      - name: Download CLI vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-cli-${{ github.sha }}
          path: scans/cli/
        continue-on-error: true
        
      - name: Download monitor vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-monitor-${{ github.sha }}
          path: scans/monitor/
        continue-on-error: true
        
      - name: Download shared vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-shared-${{ github.sha }}
          path: scans/shared/
        continue-on-error: true
        
      - name: Download servers/base vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-servers/base-${{ github.sha }}
          path: scans/servers-base/
        continue-on-error: true
        
      - name: Download servers/duckduckgo vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-servers/duckduckgo-${{ github.sha }}
          path: scans/servers-duckduckgo/
        continue-on-error: true
        
      - name: Download servers/sequential-thinking vulnerability scan
        uses: actions/download-artifact@v4
        with:
          name: vulnerability-scan-servers/sequential-thinking-${{ github.sha }}
          path: scans/servers-sequential-thinking/
        continue-on-error: true
        
      - name: Download license scan results
        uses: actions/download-artifact@v4
        with:
          name: license-scan-results-${{ github.sha }}
          path: scans/licenses/
        continue-on-error: true
        
      - name: Generate consolidated security report
        run: |
          mkdir -p reports
          echo "# Security Analysis Report" > reports/security-report.md
          echo "Generated: $(date)" >> reports/security-report.md
          echo "" >> reports/security-report.md
          
          # Consolidate vulnerability findings
          echo "## Vulnerability Scan Results" >> reports/security-report.md
          for dir in scans/*/; do
            if [ -d "$dir" ]; then
              echo "### $(basename "$dir")" >> reports/security-report.md
              for file in "$dir"*.json; do
                if [ -f "$file" ]; then
                  echo "- Found scan results: $(basename "$file")" >> reports/security-report.md
                fi
              done
            fi
          done
          
          # Add license information
          echo "" >> reports/security-report.md
          echo "## License Compliance" >> reports/security-report.md
          if [ -f "scans/licenses/license-report.csv" ]; then
            echo "- License report generated successfully" >> reports/security-report.md
          fi
          
      # ARTIFACT V4 COMPATIBILITY NOTE:
      # Consolidated security report with unique name to avoid conflicts
      # v4 requires unique artifact names across all workflow runs
      - name: Upload consolidated security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-analysis-report-${{ github.sha }}
          path: reports/
          retention-days: 180
          if-no-files-found: warn