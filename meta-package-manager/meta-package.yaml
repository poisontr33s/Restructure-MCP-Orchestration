# Captain Guthilda's Meta-Package Manifest
# üè¥‚Äç‚ò†Ô∏è Universal Multi-Language Project Configuration

metadata:
  name: "polyglot-paradise"
  version: "1.0.0"
  description: "Captain Guthilda's Universal Multi-Language Project"
  authors: ["Captain Guthilda"]

# Package manager configurations
package-managers:
  maven:
    enabled: true
    root: "."
    files: ["pom.xml"]
    commands:
      install: "mvn clean install"
      build: "mvn compile"
      test: "mvn test"

  npm:
    enabled: true
    root: "./frontend"
    files: ["package.json"]
    commands:
      install: "npm install"
      build: "npm run build"
      test: "npm test"

  bun:
    enabled: true
    root: "./modern-frontend"
    files: ["package.json"]
    commands:
      install: "bun install"
      build: "bun run build"
      test: "bun test"

  go:
    enabled: true
    root: "./services/go-service"
    files: ["go.mod"]
    commands:
      install: "go mod download"
      build: "go build"
      test: "go test ./..."

  poetry:
    enabled: true
    root: "./ml-pipeline"
    files: ["pyproject.toml"]
    commands:
      install: "poetry install"
      build: "poetry build"
      test: "poetry run pytest"

  cargo:
    enabled: true
    root: "./rust-service"
    files: ["Cargo.toml"]
    commands:
      install: "cargo fetch"
      build: "cargo build"
      test: "cargo test"

  dotnet:
    enabled: true
    root: "./dotnet-api"
    files: ["*.csproj", "*.sln"]
    commands:
      install: "dotnet restore"
      build: "dotnet build"
      test: "dotnet test"

  # üåü Exotic Package Managers
  chocolatey:
    enabled: false
    root: "./windows-deps"
    files: ["packages.config"]
    commands:
      install: "choco install packages.config -y"
      update: "choco upgrade all -y"

  truffle:
    enabled: false
    root: "./blockchain"
    files: ["truffle-config.js"]
    commands:
      install: "npm install"
      build: "truffle compile"
      test: "truffle test"

  humpty:
    enabled: false
    root: "./humpty-project"
    files: ["humpty.toml"]
    commands:
      install: "humpty assemble"
      build: "humpty fall"
      test: "humpty crack"

# Cross-language dependency mappings
dependencies:
  http-client:
    - name: "http-client"
      versions:
        maven: "org.apache.httpcomponents:httpclient:4.5.14"
        npm: "axios@^1.6.0"
        go: "github.com/go-resty/resty/v2@v2.10.0"
        poetry: "httpx==0.25.2"
        cargo: 'reqwest = { version = "0.11", features = ["json"] }'
        dotnet: "System.Net.Http.Json"

# Execution pipeline
pipeline:
  phases:
    - name: "install"
      parallel: true
      commands:
        - "maven: install"
        - "npm: install"
        - "bun: install"
        - "go: install"
        - "poetry: install"
        - "cargo: install"
        - "dotnet: install"

    - name: "build"
      parallel: true
      commands:
        - "maven: build"
        - "npm: build"
        - "go: build"
        - "poetry: build"
        - "cargo: build"
        - "dotnet: build"

    - name: "test"
      parallel: true
      commands:
        - "maven: test"
        - "npm: test"
        - "go: test"
        - "poetry: test"
        - "cargo: test"
        - "dotnet: test"

# Environment configuration
environment:
  variables:
    JAVA_OPTS: "-Xmx2g"
    NODE_ENV: "development"
    GO111MODULE: "on"
    CARGO_TARGET_DIR: "target"

  paths:
    - "./dev-tools/java21/bin"
    - "./dev-tools/maven/bin"
    - "./dev-tools/node"
    - "./dev-tools/bun"
    - "./dev-tools/go/bin"
    - "./dev-tools/python"
    - "./dev-tools/rust/bin"
    - "./dev-tools/dotnet"
