{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build MCP System",
      "type": "shell",
      "command": "pnpm build",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$tsc"],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Start MCP System",
      "type": "shell",
      "command": "pnpm start",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "dependsOn": ["Build MCP System"]
    },
    {
      "label": "Dev MCP System",
      "type": "shell",
      "command": "pnpm start:dev",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Microsoft 365 - Personal Account",
      "type": "shell",
      "command": "node -e \"const { M365GraphAgent } = require('./packages/agents/m365-graph/dist/index.js'); M365GraphAgent.createPersonalAccount().then(agent => console.log('✅ Personal account authenticated:', agent.getAuthInfo()?.displayName));\"",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "dependsOn": ["Build MCP System"]
    },
    {
      "label": "Microsoft 365 - Business Account",
      "type": "shell",
      "command": "node -e \"const { M365GraphAgent } = require('./packages/agents/m365-graph/dist/index.js'); M365GraphAgent.createBusinessAccount().then(agent => console.log('✅ Business account authenticated:', agent.getAuthInfo()?.displayName));\"",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "dependsOn": ["Build MCP System"]
    },
    {
      "label": "Check MCP Status",
      "type": "shell",
      "command": "pnpm exec mcp status",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    }
  ]
}
