# Nginx Configuration for MCP Java Orchestration System
# Optimized for Spring Boot applications with proper load balancing and health checks

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Upstream definitions for Java services
    upstream mcp_core {
        server java-dev:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_monitor {
        server java-dev:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_guthilda {
        server java-dev:8082 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_ai_integration {
        server java-dev:8083 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_servers {
        server java-dev:8084 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_cli {
        server java-dev:8085 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Monitoring services
    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream prometheus {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
    }
    
    upstream zipkin {
        server zipkin:9411 max_fails=3 fail_timeout=30s;
    }
    
    upstream sonarqube {
        server sonarqube:9000 max_fails=3 fail_timeout=30s;
    }
    
    upstream nexus {
        server nexus:8081 max_fails=3 fail_timeout=30s;
    }
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # MCP Core Service (main API)
        location /api/core/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://mcp_core/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Frame-Options SAMEORIGIN;
            
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Health check
            proxy_next_upstream error timeout http_502 http_503 http_504;
        }
        
        # MCP Monitor Service
        location /api/monitor/ {
            proxy_pass http://mcp_monitor/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # MCP Guthilda Service (Captain's Commands)
        location /api/guthilda/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://mcp_guthilda/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # MCP AI Integration Service
        location /api/ai/ {
            # Higher timeouts for AI operations
            proxy_pass http://mcp_ai_integration/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # MCP Servers Service
        location /api/servers/ {
            proxy_pass http://mcp_servers/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # MCP CLI Service
        location /api/cli/ {
            proxy_pass http://mcp_cli/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Grafana Dashboard
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for live updates
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Prometheus Metrics
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Zipkin Tracing
        location /zipkin/ {
            proxy_pass http://zipkin/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # SonarQube Code Quality
        location /sonarqube/ {
            proxy_pass http://sonarqube/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Larger buffers for SonarQube
            proxy_buffers 16 64k;
            proxy_buffer_size 128k;
        }
        
        # Nexus Repository
        location /nexus/ {
            proxy_pass http://nexus/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Support for large artifact uploads
            client_max_body_size 1G;
        }
        
        # Actuator endpoints (Spring Boot management)
        location ~ ^/actuator/(.*)$ {
            # Route to appropriate service based on path or header
            # Default to mcp-core for health checks
            proxy_pass http://mcp_core/actuator/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Restrict access to internal networks
            allow 172.21.0.0/16;
            allow 127.0.0.1;
            deny all;
        }
        
        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://mcp_core/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Static content (if any)
        location /static/ {
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Default route - redirect to main API or dashboard
        location / {
            return 302 /api/core/;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # HTTPS server (if SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_cache shared:SSL:1m;
    #     ssl_session_timeout 5m;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     # Include all the same location blocks as above
    # }
}
