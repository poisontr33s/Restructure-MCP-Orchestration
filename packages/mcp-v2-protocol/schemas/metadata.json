{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mcp-v2.org/schemas/metadata.json",
  "title": "MCP v2 Metadata",
  "description": "Universal metadata format for MCP v2 protocol operations",
  "type": "object",
  "properties": {
    "server": {
      "$ref": "#/$defs/ServerMetadata",
      "description": "Server-specific metadata"
    },
    "client": {
      "$ref": "#/$defs/ClientMetadata",
      "description": "Client-specific metadata"
    },
    "protocol": {
      "$ref": "#/$defs/ProtocolMetadata",
      "description": "Protocol-level metadata"
    },
    "performance": {
      "$ref": "#/$defs/PerformanceMetadata",
      "description": "Performance and optimization metadata"
    },
    "security": {
      "$ref": "#/$defs/SecurityMetadata",
      "description": "Security-related metadata"
    },
    "intelligence": {
      "$ref": "#/$defs/IntelligenceMetadata",
      "description": "AI/ML intelligence metadata"
    }
  },
  "$defs": {
    "ServerMetadata": {
      "type": "object",
      "description": "Server-specific metadata",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique server identifier"
        },
        "name": {
          "type": "string",
          "description": "Human-readable server name"
        },
        "version": {
          "type": "string",
          "description": "Server version"
        },
        "description": {
          "type": "string",
          "description": "Server description"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ServerCapability"
          },
          "description": "Server capabilities"
        },
        "language": {
          "type": "string",
          "enum": ["typescript", "java", "python", "go", "rust", "other"],
          "description": "Server implementation language"
        },
        "runtime": {
          "$ref": "#/$defs/RuntimeInfo",
          "description": "Runtime environment information"
        },
        "health": {
          "$ref": "#/$defs/HealthStatus",
          "description": "Current server health status"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Endpoint"
          },
          "description": "Available server endpoints"
        },
        "configuration": {
          "type": "object",
          "description": "Server configuration parameters"
        }
      },
      "required": ["id", "name", "version", "language"]
    },
    "ClientMetadata": {
      "type": "object",
      "description": "Client-specific metadata",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique client identifier"
        },
        "name": {
          "type": "string",
          "description": "Client application name"
        },
        "version": {
          "type": "string",
          "description": "Client version"
        },
        "language": {
          "type": "string",
          "enum": ["typescript", "java", "python", "go", "rust", "other"],
          "description": "Client implementation language"
        },
        "platform": {
          "type": "string",
          "enum": ["windows", "linux", "macos", "web", "mobile"],
          "description": "Client platform"
        },
        "userAgent": {
          "type": "string",
          "description": "Client user agent string"
        },
        "session": {
          "$ref": "#/$defs/SessionInfo",
          "description": "Client session information"
        },
        "preferences": {
          "type": "object",
          "description": "Client preferences and settings"
        }
      },
      "required": ["id", "name", "version", "language", "platform"]
    },
    "ProtocolMetadata": {
      "type": "object",
      "description": "Protocol-level metadata",
      "properties": {
        "version": {
          "type": "string",
          "const": "2.0",
          "description": "MCP protocol version"
        },
        "transport": {
          "type": "string",
          "enum": ["http-jsonrpc", "websocket", "grpc", "tcp", "unix-socket"],
          "description": "Transport protocol used"
        },
        "encoding": {
          "type": "string",
          "enum": ["json", "protobuf", "msgpack", "avro"],
          "default": "json",
          "description": "Message encoding format"
        },
        "compression": {
          "type": "string",
          "enum": ["none", "gzip", "deflate", "brotli"],
          "default": "none",
          "description": "Compression algorithm"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "bidirectional",
              "streaming",
              "multiplexing",
              "heartbeat",
              "reconnection",
              "authentication",
              "encryption"
            ]
          },
          "description": "Enabled protocol features"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Protocol extensions in use"
        }
      },
      "required": ["version", "transport"]
    },
    "PerformanceMetadata": {
      "type": "object",
      "description": "Performance and optimization metadata",
      "properties": {
        "metrics": {
          "$ref": "#/$defs/PerformanceMetrics",
          "description": "Current performance metrics"
        },
        "optimization": {
          "$ref": "#/$defs/OptimizationHints",
          "description": "Optimization hints and preferences"
        },
        "caching": {
          "$ref": "#/$defs/CachingMetadata",
          "description": "Caching behavior and policies"
        },
        "resource": {
          "$ref": "#/$defs/ResourceUsage",
          "description": "Resource usage information"
        }
      }
    },
    "SecurityMetadata": {
      "type": "object",
      "description": "Security-related metadata",
      "properties": {
        "authentication": {
          "$ref": "#/$defs/AuthenticationInfo",
          "description": "Authentication information"
        },
        "authorization": {
          "$ref": "#/$defs/AuthorizationInfo",
          "description": "Authorization and permissions"
        },
        "encryption": {
          "$ref": "#/$defs/EncryptionInfo",
          "description": "Encryption details"
        },
        "audit": {
          "$ref": "#/$defs/AuditInfo",
          "description": "Audit trail information"
        },
        "riskScore": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Computed risk score (0-1)"
        }
      }
    },
    "IntelligenceMetadata": {
      "type": "object",
      "description": "AI/ML intelligence metadata",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ModelInfo"
          },
          "description": "AI models used in processing"
        },
        "contextScore": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Context relevance score"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Overall AI confidence score"
        },
        "predictions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/PredictionMetadata"
          },
          "description": "AI predictions and insights"
        },
        "learningSignals": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/LearningSignal"
          },
          "description": "Learning signals for model improvement"
        },
        "adaptations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/AdaptationMetadata"
          },
          "description": "Applied adaptations based on context"
        }
      }
    },
    "ServerCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Capability name"
        },
        "version": {
          "type": "string",
          "description": "Capability version"
        },
        "description": {
          "type": "string",
          "description": "Capability description"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported methods for this capability"
        },
        "parameters": {
          "type": "object",
          "description": "Capability-specific parameters"
        }
      },
      "required": ["name", "version"]
    },
    "RuntimeInfo": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Runtime platform"
        },
        "version": {
          "type": "string",
          "description": "Runtime version"
        },
        "architecture": {
          "type": "string",
          "enum": ["x86", "x64", "arm", "arm64"],
          "description": "CPU architecture"
        },
        "memory": {
          "type": "object",
          "properties": {
            "heap": {
              "type": "integer",
              "description": "Heap size in bytes"
            },
            "used": {
              "type": "integer",
              "description": "Used memory in bytes"
            },
            "max": {
              "type": "integer",
              "description": "Maximum memory in bytes"
            }
          }
        },
        "gc": {
          "type": "object",
          "properties": {
            "algorithm": {
              "type": "string",
              "description": "Garbage collection algorithm"
            },
            "collections": {
              "type": "integer",
              "description": "Number of GC collections"
            },
            "totalTime": {
              "type": "number",
              "description": "Total GC time in milliseconds"
            }
          }
        }
      }
    },
    "HealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["healthy", "degraded", "unhealthy", "unknown"],
          "description": "Overall health status"
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/HealthCheck"
          },
          "description": "Individual health checks"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Last health status update"
        },
        "uptime": {
          "type": "number",
          "description": "Server uptime in seconds"
        }
      },
      "required": ["status", "lastUpdate"]
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Endpoint URL"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "WebSocket", "gRPC"],
          "description": "HTTP method or protocol"
        },
        "description": {
          "type": "string",
          "description": "Endpoint description"
        },
        "authentication": {
          "type": "boolean",
          "description": "Whether authentication is required"
        },
        "rateLimit": {
          "type": "object",
          "properties": {
            "requests": {
              "type": "integer",
              "description": "Requests per time window"
            },
            "window": {
              "type": "string",
              "description": "Time window (e.g., '1m', '1h')"
            }
          }
        }
      },
      "required": ["url", "method"]
    },
    "SessionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Session identifier"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Session creation time"
        },
        "lastActivity": {
          "type": "string",
          "format": "date-time",
          "description": "Last activity time"
        },
        "duration": {
          "type": "number",
          "description": "Session duration in seconds"
        },
        "requestCount": {
          "type": "integer",
          "description": "Number of requests in session"
        }
      },
      "required": ["id", "created"]
    },
    "PerformanceMetrics": {
      "type": "object",
      "properties": {
        "responseTime": {
          "type": "object",
          "properties": {
            "current": {
              "type": "number",
              "description": "Current response time in milliseconds"
            },
            "average": {
              "type": "number",
              "description": "Average response time"
            },
            "p95": {
              "type": "number",
              "description": "95th percentile response time"
            },
            "p99": {
              "type": "number",
              "description": "99th percentile response time"
            }
          }
        },
        "throughput": {
          "type": "object",
          "properties": {
            "current": {
              "type": "number",
              "description": "Current requests per second"
            },
            "peak": {
              "type": "number",
              "description": "Peak requests per second"
            }
          }
        },
        "errorRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Error rate (0-1)"
        }
      }
    },
    "OptimizationHints": {
      "type": "object",
      "properties": {
        "caching": {
          "type": "string",
          "enum": ["none", "aggressive", "conservative", "adaptive"],
          "description": "Caching strategy preference"
        },
        "compression": {
          "type": "boolean",
          "description": "Whether to use compression"
        },
        "batching": {
          "type": "boolean",
          "description": "Whether to batch requests"
        },
        "prefetch": {
          "type": "boolean",
          "description": "Whether to prefetch related data"
        }
      }
    },
    "CachingMetadata": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether caching is enabled"
        },
        "ttl": {
          "type": "integer",
          "description": "Time-to-live in seconds"
        },
        "strategy": {
          "type": "string",
          "enum": ["lru", "fifo", "lfu", "adaptive"],
          "description": "Caching strategy"
        },
        "hitRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Cache hit rate (0-1)"
        }
      }
    },
    "ResourceUsage": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "CPU utilization (0-1)"
        },
        "memory": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Memory utilization (0-1)"
        },
        "network": {
          "type": "object",
          "properties": {
            "bytesIn": {
              "type": "integer",
              "description": "Bytes received"
            },
            "bytesOut": {
              "type": "integer",
              "description": "Bytes sent"
            }
          }
        },
        "disk": {
          "type": "object",
          "properties": {
            "reads": {
              "type": "integer",
              "description": "Disk read operations"
            },
            "writes": {
              "type": "integer",
              "description": "Disk write operations"
            }
          }
        }
      }
    },
    "AuthenticationInfo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["none", "basic", "bearer", "oauth2", "jwt", "api-key"],
          "description": "Authentication type"
        },
        "realm": {
          "type": "string",
          "description": "Authentication realm"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Authentication scopes"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Authentication expiry time"
        }
      }
    },
    "AuthorizationInfo": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Granted permissions"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User roles"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Applied security policies"
        }
      }
    },
    "EncryptionInfo": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether encryption is enabled"
        },
        "algorithm": {
          "type": "string",
          "enum": ["AES-256", "ChaCha20", "RSA-2048", "ECDSA"],
          "description": "Encryption algorithm"
        },
        "keyManagement": {
          "type": "string",
          "enum": ["manual", "automated", "hsm", "kms"],
          "description": "Key management system"
        }
      }
    },
    "AuditInfo": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether auditing is enabled"
        },
        "logLevel": {
          "type": "string",
          "enum": ["minimal", "standard", "detailed", "comprehensive"],
          "description": "Audit log level"
        },
        "retention": {
          "type": "string",
          "description": "Audit log retention period"
        }
      }
    },
    "ModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Model identifier"
        },
        "name": {
          "type": "string",
          "description": "Model name"
        },
        "version": {
          "type": "string",
          "description": "Model version"
        },
        "type": {
          "type": "string",
          "enum": ["language-model", "code-model", "embedding-model", "classification"],
          "description": "Model type"
        },
        "parameters": {
          "type": "integer",
          "description": "Number of model parameters"
        },
        "accuracy": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Model accuracy (0-1)"
        }
      },
      "required": ["id", "type"]
    },
    "PredictionMetadata": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "performance-prediction",
            "error-prediction", 
            "usage-prediction",
            "optimization-opportunity"
          ],
          "description": "Type of prediction"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Prediction confidence (0-1)"
        },
        "timeframe": {
          "type": "string",
          "description": "Prediction timeframe"
        },
        "actionable": {
          "type": "boolean",
          "description": "Whether prediction is actionable"
        }
      },
      "required": ["type", "confidence"]
    },
    "LearningSignal": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "user-satisfaction",
            "error-rate",
            "performance-metric",
            "usage-pattern",
            "feedback-explicit"
          ]
        },
        "value": {
          "description": "Signal value",
          "oneOf": [
            {"type": "number"},
            {"type": "string"},
            {"type": "boolean"}
          ]
        },
        "weight": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Signal importance weight"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["type", "value", "timestamp"]
    },
    "AdaptationMetadata": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "response-format",
            "verbosity-level",
            "technical-depth",
            "error-handling",
            "optimization-preference"
          ],
          "description": "Type of adaptation"
        },
        "applied": {
          "type": "boolean",
          "description": "Whether adaptation was applied"
        },
        "reason": {
          "type": "string",
          "description": "Reason for adaptation"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Adaptation confidence (0-1)"
        }
      },
      "required": ["type", "applied"]
    },
    "HealthCheck": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Health check name"
        },
        "status": {
          "type": "string",
          "enum": ["healthy", "degraded", "unhealthy"],
          "description": "Health check status"
        },
        "message": {
          "type": "string",
          "description": "Health check message"
        },
        "duration": {
          "type": "number",
          "description": "Check duration in milliseconds"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Check timestamp"
        }
      },
      "required": ["name", "status", "timestamp"]
    }
  }
}
