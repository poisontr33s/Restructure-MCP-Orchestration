{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mcp-v2.org/schemas/request.json",
  "title": "MCP v2 Request",
  "description": "Universal request format for MCP v2 protocol across all languages",
  "type": "object",
  "required": ["id", "jsonrpc", "method", "params"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique request identifier",
      "pattern": "^[a-zA-Z0-9_-]+$"
    },
    "jsonrpc": {
      "type": "string",
      "const": "2.0",
      "description": "JSON-RPC version (always 2.0 for MCP v2)"
    },
    "method": {
      "type": "string",
      "description": "Method name to execute",
      "examples": [
        "tools/call",
        "context/store", 
        "context/retrieve",
        "intelligence/enhance",
        "server/bridge"
      ]
    },
    "params": {
      "type": "object",
      "description": "Method-specific parameters",
      "additionalProperties": true
    },
    "context": {
      "$ref": "#/$defs/ContextualSession",
      "description": "Contextual session information for intelligent processing"
    },
    "metadata": {
      "$ref": "#/$defs/RequestMetadata",
      "description": "Request metadata for routing, tracing, and optimization"
    }
  },
  "$defs": {
    "ContextualSession": {
      "type": "object",
      "description": "Contextual session for intelligent request processing",
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "Unique session identifier"
        },
        "userId": {
          "type": "string",
          "description": "User identifier for personalized context"
        },
        "projectId": {
          "type": "string",
          "description": "Project identifier for project-specific context"
        },
        "taskType": {
          "type": "string",
          "enum": [
            "java-development",
            "typescript-development", 
            "python-development",
            "system-architecture",
            "debugging",
            "documentation",
            "testing",
            "deployment"
          ],
          "description": "Type of task being performed"
        },
        "expertise": {
          "type": "string",
          "enum": ["beginner", "intermediate", "advanced", "expert"],
          "description": "User's expertise level for context adaptation"
        },
        "preferences": {
          "type": "object",
          "description": "User preferences for response customization",
          "properties": {
            "verbosity": {
              "type": "string",
              "enum": ["minimal", "normal", "detailed", "comprehensive"]
            },
            "codeStyle": {
              "type": "string",
              "enum": ["functional", "oop", "hybrid"]
            },
            "errorHandling": {
              "type": "string", 
              "enum": ["strict", "graceful", "permissive"]
            }
          }
        },
        "history": {
          "type": "array",
          "description": "Recent context history for pattern recognition",
          "items": {
            "$ref": "#/$defs/ContextItem"
          },
          "maxItems": 10
        }
      },
      "required": ["sessionId", "taskType"]
    },
    "RequestMetadata": {
      "type": "object",
      "description": "Metadata for request routing and optimization",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Request timestamp in ISO 8601 format"
        },
        "source": {
          "type": "object",
          "description": "Request source information",
          "properties": {
            "language": {
              "type": "string",
              "enum": ["typescript", "java", "python", "go", "rust"]
            },
            "framework": {
              "type": "string",
              "examples": ["spring-boot", "express", "fastapi", "gin"]
            },
            "version": {
              "type": "string",
              "description": "Client library version"
            }
          },
          "required": ["language"]
        },
        "routing": {
          "type": "object",
          "description": "Routing preferences and constraints",
          "properties": {
            "preferredServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Preferred server IDs for processing"
            },
            "excludeServers": {
              "type": "array", 
              "items": {
                "type": "string"
              },
              "description": "Server IDs to exclude from processing"
            },
            "maxLatency": {
              "type": "number",
              "description": "Maximum acceptable latency in milliseconds"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "normal", "high", "critical"],
              "default": "normal"
            }
          }
        },
        "tracing": {
          "type": "object",
          "description": "Distributed tracing information",
          "properties": {
            "traceId": {
              "type": "string",
              "description": "Distributed trace identifier"
            },
            "spanId": {
              "type": "string", 
              "description": "Current span identifier"
            },
            "parentSpanId": {
              "type": "string",
              "description": "Parent span identifier"
            }
          }
        }
      },
      "required": ["timestamp", "source"]
    },
    "ContextItem": {
      "type": "object",
      "description": "Individual context item with relevance scoring",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "error-pattern",
            "code-solution", 
            "configuration",
            "workflow-state",
            "user-feedback",
            "performance-metric"
          ]
        },
        "content": {
          "type": "string",
          "description": "Context content"
        },
        "relevanceScore": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Relevance score (0-1)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Searchable tags for context categorization"
        }
      },
      "required": ["type", "content", "relevanceScore", "timestamp"]
    }
  }
}
