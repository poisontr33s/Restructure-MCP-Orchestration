{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mcp-v2.org/schemas/context.json",
  "title": "MCP v2 Context",
  "description": "Universal context format for intelligent MCP v2 operations",
  "type": "object",
  "properties": {
    "global": {
      "$ref": "#/$defs/GlobalContext",
      "description": "Global system context"
    },
    "session": {
      "$ref": "#/$defs/SessionContext", 
      "description": "Session-specific context"
    },
    "user": {
      "$ref": "#/$defs/UserContext",
      "description": "User-specific context and preferences"
    },
    "project": {
      "$ref": "#/$defs/ProjectContext",
      "description": "Project-specific context"
    },
    "environment": {
      "$ref": "#/$defs/EnvironmentContext",
      "description": "Environment and infrastructure context"
    },
    "intelligence": {
      "$ref": "#/$defs/IntelligenceContext",
      "description": "AI/ML context for enhanced processing"
    }
  },
  "$defs": {
    "GlobalContext": {
      "type": "object",
      "description": "Global system context shared across all operations",
      "properties": {
        "systemId": {
          "type": "string",
          "description": "Unique system identifier"
        },
        "version": {
          "type": "string",
          "description": "MCP v2 system version"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "tool-execution",
              "context-management", 
              "intelligence-enhancement",
              "bridge-communication",
              "multi-language-support",
              "distributed-processing"
            ]
          },
          "description": "System capabilities"
        },
        "policies": {
          "$ref": "#/$defs/SystemPolicies",
          "description": "System-wide policies and constraints"
        }
      },
      "required": ["systemId", "version", "capabilities"]
    },
    "SessionContext": {
      "type": "object",
      "description": "Session-specific context information",
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "Unique session identifier"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Session start time"
        },
        "duration": {
          "type": "number",
          "description": "Session duration in seconds"
        },
        "state": {
          "type": "string",
          "enum": ["active", "idle", "suspended", "terminated"],
          "description": "Current session state"
        },
        "workflow": {
          "$ref": "#/$defs/WorkflowState",
          "description": "Current workflow state"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/HistoryItem"
          },
          "description": "Session operation history",
          "maxItems": 100
        },
        "metrics": {
          "$ref": "#/$defs/SessionMetrics",
          "description": "Session performance metrics"
        }
      },
      "required": ["sessionId", "startTime", "state"]
    },
    "UserContext": {
      "type": "object",
      "description": "User-specific context and preferences",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique user identifier"
        },
        "profile": {
          "$ref": "#/$defs/UserProfile",
          "description": "User profile information"
        },
        "preferences": {
          "$ref": "#/$defs/UserPreferences",
          "description": "User preferences and settings"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User permissions and access rights"
        },
        "learningModel": {
          "$ref": "#/$defs/UserLearningModel",
          "description": "User's personalized learning model"
        }
      },
      "required": ["userId"]
    },
    "ProjectContext": {
      "type": "object",
      "description": "Project-specific context information",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Unique project identifier"
        },
        "name": {
          "type": "string",
          "description": "Project name"
        },
        "type": {
          "type": "string",
          "enum": [
            "java-maven",
            "java-gradle", 
            "typescript-node",
            "typescript-react",
            "python-package",
            "python-webapp",
            "polyglot-monorepo",
            "other"
          ],
          "description": "Project type"
        },
        "structure": {
          "$ref": "#/$defs/ProjectStructure",
          "description": "Project structure and layout"
        },
        "dependencies": {
          "$ref": "#/$defs/ProjectDependencies",
          "description": "Project dependencies and versions"
        },
        "configuration": {
          "$ref": "#/$defs/ProjectConfiguration",
          "description": "Project configuration and settings"
        },
        "status": {
          "$ref": "#/$defs/ProjectStatus",
          "description": "Current project status"
        }
      },
      "required": ["projectId", "name", "type"]
    },
    "EnvironmentContext": {
      "type": "object",
      "description": "Environment and infrastructure context",
      "properties": {
        "platform": {
          "type": "string",
          "enum": ["windows", "linux", "macos"],
          "description": "Operating system platform"
        },
        "runtime": {
          "$ref": "#/$defs/RuntimeEnvironment",
          "description": "Runtime environment details"
        },
        "infrastructure": {
          "$ref": "#/$defs/InfrastructureContext",
          "description": "Infrastructure and deployment context"
        },
        "resources": {
          "$ref": "#/$defs/ResourceAvailability",
          "description": "Available system resources"
        }
      },
      "required": ["platform"]
    },
    "IntelligenceContext": {
      "type": "object",
      "description": "AI/ML context for enhanced processing",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/AiModel"
          },
          "description": "Available AI models"
        },
        "patterns": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/RecognizedPattern"
          },
          "description": "Recognized patterns from context analysis"
        },
        "predictions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/AiPrediction"
          },
          "description": "AI-generated predictions"
        },
        "learningSignals": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/LearningSignal"
          },
          "description": "Accumulated learning signals"
        }
      }
    },
    "SystemPolicies": {
      "type": "object",
      "properties": {
        "security": {
          "type": "object",
          "properties": {
            "requireAuth": {
              "type": "boolean",
              "default": true
            },
            "maxRequestSize": {
              "type": "integer",
              "description": "Maximum request size in bytes"
            },
            "allowedOrigins": {
              "type": "array",
              "items": {"type": "string"}
            }
          }
        },
        "performance": {
          "type": "object",
          "properties": {
            "maxConcurrentRequests": {
              "type": "integer",
              "default": 100
            },
            "timeoutMs": {
              "type": "integer",
              "default": 30000
            },
            "rateLimiting": {
              "type": "object",
              "properties": {
                "requestsPerMinute": {
                  "type": "integer",
                  "default": 60
                },
                "burstSize": {
                  "type": "integer",
                  "default": 10
                }
              }
            }
          }
        }
      }
    },
    "WorkflowState": {
      "type": "object",
      "properties": {
        "currentStep": {
          "type": "string",
          "description": "Current workflow step"
        },
        "totalSteps": {
          "type": "integer",
          "description": "Total number of workflow steps"
        },
        "progress": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Workflow completion progress (0-1)"
        },
        "variables": {
          "type": "object",
          "description": "Workflow variables and state"
        }
      }
    },
    "HistoryItem": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "operation": {
          "type": "string",
          "description": "Operation performed"
        },
        "success": {
          "type": "boolean",
          "description": "Whether operation was successful"
        },
        "duration": {
          "type": "number",
          "description": "Operation duration in milliseconds"
        },
        "context": {
          "type": "object",
          "description": "Operation context snapshot"
        }
      },
      "required": ["timestamp", "operation", "success"]
    },
    "SessionMetrics": {
      "type": "object",
      "properties": {
        "requestCount": {
          "type": "integer",
          "description": "Total requests in session"
        },
        "averageResponseTime": {
          "type": "number",
          "description": "Average response time in milliseconds"
        },
        "errorRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Error rate (0-1)"
        },
        "cacheHitRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Cache hit rate (0-1)"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "expertise": {
          "type": "string",
          "enum": ["beginner", "intermediate", "advanced", "expert"]
        },
        "primaryLanguages": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Primary programming languages"
        },
        "frameworks": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Familiar frameworks"
        },
        "workStyle": {
          "type": "string",
          "enum": ["fast-iteration", "thorough-planning", "exploration", "production-focused"]
        }
      }
    },
    "UserPreferences": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "enum": ["minimal", "normal", "detailed", "comprehensive"],
          "default": "normal"
        },
        "codeStyle": {
          "type": "string",
          "enum": ["functional", "oop", "hybrid"],
          "default": "hybrid"
        },
        "errorHandling": {
          "type": "string",
          "enum": ["strict", "graceful", "permissive"],
          "default": "graceful"
        },
        "notifications": {
          "type": "object",
          "properties": {
            "enabled": {"type": "boolean", "default": true},
            "types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["error", "warning", "info", "success"]
              }
            }
          }
        }
      }
    },
    "UserLearningModel": {
      "type": "object",
      "properties": {
        "skillLevels": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_-]+$": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          "description": "Skill levels by domain (0-1)"
        },
        "learningPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identified learning patterns"
        },
        "adaptationHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "timestamp": {"type": "string", "format": "date-time"},
              "adaptation": {"type": "string"},
              "effectiveness": {"type": "number", "minimum": 0, "maximum": 1}
            }
          }
        }
      }
    },
    "ProjectStructure": {
      "type": "object",
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Project root path"
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "path": {"type": "string"},
              "type": {"type": "string"},
              "dependencies": {"type": "array", "items": {"type": "string"}}
            }
          }
        },
        "buildSystem": {
          "type": "string",
          "enum": ["maven", "gradle", "npm", "pnpm", "cargo", "go-mod"]
        }
      }
    },
    "ProjectDependencies": {
      "type": "object",
      "properties": {
        "runtime": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_.-]+$": {"type": "string"}
          }
        },
        "development": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_.-]+$": {"type": "string"}
          }
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "package": {"type": "string"},
              "severity": {"type": "string", "enum": ["low", "medium", "high", "critical"]},
              "description": {"type": "string"}
            }
          }
        }
      }
    },
    "ProjectConfiguration": {
      "type": "object",
      "properties": {
        "buildConfig": {
          "type": "object",
          "description": "Build configuration"
        },
        "linting": {
          "type": "object",
          "description": "Linting configuration"
        },
        "testing": {
          "type": "object",
          "description": "Testing configuration"
        },
        "deployment": {
          "type": "object",
          "description": "Deployment configuration"
        }
      }
    },
    "ProjectStatus": {
      "type": "object",
      "properties": {
        "health": {
          "type": "string",
          "enum": ["healthy", "warning", "error", "unknown"]
        },
        "buildStatus": {
          "type": "string",
          "enum": ["success", "failure", "pending", "unknown"]
        },
        "testCoverage": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Test coverage percentage (0-1)"
        },
        "lastActivity": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RuntimeEnvironment": {
      "type": "object",
      "properties": {
        "java": {
          "type": "object",
          "properties": {
            "version": {"type": "string"},
            "vendor": {"type": "string"},
            "javaHome": {"type": "string"}
          }
        },
        "node": {
          "type": "object",
          "properties": {
            "version": {"type": "string"},
            "npmVersion": {"type": "string"},
            "pnpmVersion": {"type": "string"}
          }
        },
        "python": {
          "type": "object",
          "properties": {
            "version": {"type": "string"},
            "virtualEnv": {"type": "string"},
            "packages": {"type": "array", "items": {"type": "string"}}
          }
        }
      }
    },
    "InfrastructureContext": {
      "type": "object",
      "properties": {
        "deployment": {
          "type": "string",
          "enum": ["local", "development", "staging", "production"]
        },
        "containerized": {
          "type": "boolean",
          "default": false
        },
        "cloudProvider": {
          "type": "string",
          "enum": ["aws", "gcp", "azure", "none"]
        },
        "monitoring": {
          "type": "object",
          "properties": {
            "enabled": {"type": "boolean"},
            "endpoints": {"type": "array", "items": {"type": "string"}}
          }
        }
      }
    },
    "ResourceAvailability": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "object",
          "properties": {
            "cores": {"type": "integer"},
            "utilization": {"type": "number", "minimum": 0, "maximum": 1}
          }
        },
        "memory": {
          "type": "object",
          "properties": {
            "total": {"type": "integer", "description": "Total memory in bytes"},
            "available": {"type": "integer", "description": "Available memory in bytes"}
          }
        },
        "disk": {
          "type": "object",
          "properties": {
            "total": {"type": "integer", "description": "Total disk space in bytes"},
            "available": {"type": "integer", "description": "Available disk space in bytes"}
          }
        },
        "network": {
          "type": "object",
          "properties": {
            "bandwidth": {"type": "number", "description": "Available bandwidth in Mbps"},
            "latency": {"type": "number", "description": "Network latency in milliseconds"}
          }
        }
      }
    },
    "AiModel": {
      "type": "object",
      "properties": {
        "id": {"type": "string"},
        "type": {
          "type": "string",
          "enum": ["language-model", "code-model", "embedding-model", "classification-model"]
        },
        "version": {"type": "string"},
        "capabilities": {
          "type": "array",
          "items": {"type": "string"}
        },
        "performance": {
          "type": "object",
          "properties": {
            "accuracy": {"type": "number", "minimum": 0, "maximum": 1},
            "latency": {"type": "number", "description": "Average latency in milliseconds"}
          }
        }
      },
      "required": ["id", "type", "version"]
    },
    "RecognizedPattern": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "error-pattern",
            "performance-pattern",
            "usage-pattern",
            "code-pattern",
            "workflow-pattern"
          ]
        },
        "description": {"type": "string"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "frequency": {"type": "integer", "description": "How often this pattern appears"},
        "impact": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"]
        }
      },
      "required": ["type", "description", "confidence"]
    },
    "AiPrediction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "performance-prediction",
            "error-prediction",
            "usage-prediction",
            "optimization-prediction"
          ]
        },
        "prediction": {"type": "string"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "timeframe": {"type": "string", "description": "When prediction applies"},
        "actionable": {"type": "boolean", "description": "Whether prediction can be acted upon"}
      },
      "required": ["type", "prediction", "confidence"]
    },
    "LearningSignal": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "user-satisfaction",
            "error-rate",
            "performance-metric",
            "usage-pattern",
            "feedback-explicit"
          ]
        },
        "value": {
          "description": "Signal value",
          "oneOf": [
            {"type": "number"},
            {"type": "string"},
            {"type": "boolean"}
          ]
        },
        "weight": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Signal importance weight"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["type", "value", "timestamp"]
    }
  }
}
