name: Java 21 MCP Orchestration System CI/CD

on:
  push:
    branches: [ feature/java21-port ]
  pull_request:
    branches: [ feature/java21-port ]

jobs:
  build-and-test:
    name: Build and Test Java 21 MCP System
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: 🏴‍☠️ Checkout Captain Guthilda's Code
      uses: actions/checkout@v4
      
    - name: ⚡ Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: 📦 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🔧 Compile Java 21 with Preview Features
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn clean compile -Dmaven.compiler.source=21 -Dmaven.compiler.target=21
        
    - name: 🧪 Run Tests
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn test -Dmaven.compiler.source=21 -Dmaven.compiler.target=21
        
    - name: 📊 Generate Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: '**/target/surefire-reports/*.xml'
        reporter: java-junit
        
    - name: 📦 Package Application
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn package -DskipTests -Dmaven.compiler.source=21 -Dmaven.compiler.target=21
        
    - name: 🏴‍☠️ Captain Guthilda Status Check
      run: |
        echo "🏴‍☠️ Captain Guthilda's Java 21 Fleet Status:"
        echo "✅ Virtual Threads: Enabled"
        echo "✅ Pattern Matching: Sharp as cutlass"
        echo "✅ Records: Immutable as the sea"
        echo "✅ AI Integration: Ready for orchestration"
        echo "⚓ The fleet is ready to sail!"

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 🏴‍☠️ Checkout Code
      uses: actions/checkout@v4
      
    - name: ⚡ Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: 🔍 SpotBugs Analysis
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn spotbugs:check -Dmaven.compiler.source=21 -Dmaven.compiler.target=21
        
    - name: 📊 JaCoCo Coverage Report
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn jacoco:report -Dmaven.compiler.source=21 -Dmaven.compiler.target=21

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 🏴‍☠️ Checkout Code
      uses: actions/checkout@v4
      
    - name: ⚡ Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: 🛡️ OWASP Dependency Check
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn org.owasp:dependency-check-maven:check
        
    - name: 📋 Upload Security Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: target/dependency-check-report.html

  docker-build:
    name: Docker Build (Java 21)
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 🏴‍☠️ Checkout Code
      uses: actions/checkout@v4
      
    - name: ⚡ Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: 📦 Build Application
      run: |
        export MAVEN_OPTS="--enable-preview"
        mvn clean package -DskipTests -Dmaven.compiler.source=21 -Dmaven.compiler.target=21
        
    - name: 🐳 Build Docker Image
      run: |
        cat > Dockerfile << 'EOF'
        FROM openjdk:21-jdk-slim
        
        LABEL maintainer="Captain Guthilda <guthilda@mcporchestration.com>"
        LABEL description="MCP Orchestration System - Java 21 Edition"
        LABEL version="2.0.0-java21"
        
        # Copy the JAR file
        COPY mcp-core/target/mcp-core-2.0.0.jar app.jar
        
        # Expose the port
        EXPOSE 8080
        
        # Captain Guthilda's startup command
        ENTRYPOINT ["java", "--enable-preview", "-Xmx512m", "-jar", "/app.jar"]
        EOF
        
        docker build -t mcp-orchestration-java21:latest .
        docker images | grep mcp-orchestration
        
    - name: 🏴‍☠️ Captain Guthilda's Final Salute
      run: |
        echo "🏴‍☠️ Captain Guthilda's Java 21 Fleet Successfully Deployed!"
        echo "⚓ Virtual threads be sailing, AI integration be ready!"
        echo "🚀 The future of MCP orchestration has arrived!"
