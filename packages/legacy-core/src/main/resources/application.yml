# MCP Orchestration System - Java 21 Edition
# Captain Guthilda's Configuration

spring:
  application:
    name: mcp-orchestration-java21
  
  # Virtual Threads Configuration (Java 21)
  threads:
    virtual:
      enabled: true
  
  # Web Configuration
  webflux:
    base-path: /api
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /

# Management Endpoints (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.mcporchestration: INFO
    org.springframework: WARN
    root: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Captain Guthilda Configuration
mcp:
  guthilda:
    captain: "Triple-:D'Cup Piroteena"
    fractal-id: "[Feather.Weeds.Subordinate]"
    meta-automation: true
    ai-integration: true
  
  orchestration:
    health-check-interval: 30s
    startup-timeout: 60s
    shutdown-timeout: 30s
    virtual-threads: true
  
  servers:
    default-configs:
      - name: "Sequential Thinking Server"
        type: "sequential-thinking"
        port: 8081
        enabled: true
        ai-enabled: true
        ai-provider: "sequential-thinking"
      
      - name: "DuckDuckGo Search Server"
        type: "duckduckgo"
        port: 8082
        enabled: true
        ai-enabled: false
      
      - name: "Captain Guthilda AI Server"
        type: "guthilda-ai"
        port: 8083
        enabled: true
        ai-enabled: true
        ai-provider: "guthilda-meta"
        ai-model: "orchestration-model"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    com.mcporchestration: DEBUG
    org.springframework.web: DEBUG

mcp:
  orchestration:
    health-check-interval: 10s

---
# Production Profile  
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    com.mcporchestration: WARN
    root: WARN

mcp:
  orchestration:
    health-check-interval: 60s

---
# AI Enhanced Profile
spring:
  config:
    activate:
      on-profile: ai-enhanced

mcp:
  guthilda:
    ai-integration: true
    copilot-bridge: true
    claude-integration: true
  
  ai:
    providers:
      openai:
        enabled: true
        model: "gpt-4"
      anthropic:
        enabled: true
        model: "claude-3-opus"
      github-copilot:
        enabled: true
        integration-level: "enhanced"
