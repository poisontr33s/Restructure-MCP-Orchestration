name: CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-and-test:
    name: Build & Test (${{ matrix.os }}, Node ${{ matrix.node-version }})
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint --continue

      - name: Run type checking
        run: pnpm run build

      - name: Run tests
        run: pnpm run test --continue || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: build-artifacts-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            packages/*/dist/
            packages/*/build/
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            packages/*/coverage/
            packages/*/test-results/
            packages/*/.nyc_output/
          retention-days: 7

  lint-and-format:
    name: Lint & Format Check (${{ matrix.package }})
    permissions:
      contents: read
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        package: [cli, core, monitor, shared]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting for ${{ matrix.package }}
        run: pnpm --filter @mcp/${{ matrix.package }} run lint --continue || true

      - name: Check formatting
        run: pnpm prettier --check "packages/${{ matrix.package }}/**/*.{ts,tsx,js,jsx,md,json}"

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: lint-results-${{ matrix.package }}
          path: |
            packages/${{ matrix.package }}/eslint-report.json
            packages/${{ matrix.package }}/lint-results.txt
          retention-days: 3

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level high || true

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: security-scan-results
          path: |
            audit-results.json
            security-report.txt
          retention-days: 30

  collect-artifacts:
    name: Collect Build Artifacts
    runs-on: ubuntu-latest
    needs: [build-and-test, lint-and-format, security-scan]
    if: always()

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-artifacts-*
          path: ./collected-builds
          merge-multiple: false

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          path: ./collected-tests
          merge-multiple: false

      - name: Download lint results
        uses: actions/download-artifact@v4
        with:
          pattern: lint-results-*
          path: ./collected-lint
          merge-multiple: false

      - name: Download security results
        uses: actions/download-artifact@v4
        with:
          name: security-scan-results
          path: ./collected-security

      - name: Create summary report
        run: |
          echo "# CI Pipeline Summary" > summary.md
          echo "## Build Artifacts" >> summary.md
          ls -la ./collected-builds/ >> summary.md
          echo "## Test Results" >> summary.md
          ls -la ./collected-tests/ >> summary.md
          echo "## Lint Results" >> summary.md
          ls -la ./collected-lint/ >> summary.md
          echo "## Security Scan" >> summary.md
          ls -la ./collected-security/ >> summary.md

      - name: Upload consolidated results
        uses: actions/upload-artifact@v4
        with:
          name: ci-pipeline-summary
          path: |
            summary.md
            ./collected-builds/
            ./collected-tests/
            ./collected-lint/
            ./collected-security/
          retention-days: 30