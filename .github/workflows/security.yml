name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays

env:
  NODE_VERSION: '18'

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan (${{ matrix.package }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        package: [root, core, cli, monitor, shared, servers/base, servers/duckduckgo, servers/sequential-thinking, servers/m365-graph, agents/m365-graph, agents/m365-teams, agents/m365-outlook, agents/m365-sharepoint, agents/m365-onedrive]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: |
          if [ "${{ matrix.package }}" = "root" ]; then
            pnpm install --frozen-lockfile
          else
            cd packages/${{ matrix.package }}
            pnpm install --frozen-lockfile
          fi
          
      - name: Run pnpm audit
        run: |
          if [ "${{ matrix.package }}" = "root" ]; then
            pnpm audit --audit-level=moderate --json > audit-results.json || true
          else
            cd packages/${{ matrix.package }}
            pnpm audit --audit-level=moderate --json > ../../audit-results-${{ matrix.package }}.json || true
          fi
          
      - name: Upload vulnerability scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-scan-${{ matrix.package }}-${{ github.sha }}
          path: |
            audit-results*.json
          retention-days: 30
          if-no-files-found: warn

  license-scan:
    name: License Compliance Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install license checker
        run: pnpm add -g license-checker
        
      - name: Generate license report
        run: |
          license-checker --json --out license-report.json || true
          license-checker --csv --out license-report.csv || true
          
      - name: Upload license scan results
        uses: actions/upload-artifact@v4
        with:
          name: license-scan-results-${{ github.sha }}
          path: |
            license-report.json
            license-report.csv
          retention-days: 90
          if-no-files-found: warn